{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macde/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://NextJS:12345@cluster0.2myrw.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://NextJS:12345@cluster0.2myrw.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.title,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/macde/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Fragment","Head","MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetupData","title","description","image","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAE9B,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACA;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADA,eAEF;AAAM,QAAA,IAAI,EAAC,aAAX;AACM,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AADhC;AAAA;AAAA;AAAA;AAAA,cAFE;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOG,QAAC,YAAD;AACA,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KADxB;AAEA,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAFxB;AAGC,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAH3B;AAIC,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJ/B;AAAA;AAAA;AAAA;AAAA,YAPH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBC;;AAED,OAAO,eAAeG,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACjB,2FADiB,CAArB;AAGI,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAsCC,OAAtC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEJ,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAC1BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADkB,KAAL,CAAlB;AAFJ,GAAP;AAMH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACjB,2FADiB,CAArB;AAGI,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAI,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AACpDb,IAAAA,GAAG,EAAEjB,QAAQ,CAACyB,QAAD;AADuC,GAA1B,CAA9B;AAIAf,EAAAA,MAAM,CAACS,KAAP;AAEJ,SAAO;AACHhB,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACR2B,QAAAA,EAAE,EAAEF,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADI;AAERrB,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAFd;AAGRG,QAAAA,OAAO,EAAEqB,cAAc,CAACxB,KAHhB;AAIRE,QAAAA,KAAK,EAAEsB,cAAc,CAACtB,KAJd;AAKRD,QAAAA,WAAW,EAAEuB,cAAc,CAACvB;AALpB;AADT;AADJ,GAAP;AAWH;AAED,eAAeJ,aAAf","sourcesContent":["import { Fragment } from 'react';\nimport Head from 'next/head';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n    \nreturn (\n    <Fragment>\n        <Head>\n        <title>{props.meetupData.title}</title>\n      <meta name=\"description\"\n            content={props.meetupData.description} \n       />\n        </Head>\n       <MeetupDetail \n       image={props.meetupData.image}\n       title={props.meetupData.title}\n        address={props.meetupData.address}\n        description={props.meetupData.description}\n        />\n        </Fragment>\n    );\n}\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect(\n        'mongodb+srv://NextJS:12345@cluster0.2myrw.mongodb.net/meetups?retryWrites=true&w=majority'\n        );\n        const db = client.db();\n      \n        const meetupsCollection = db.collection('meetups');\n\n        const meetups = await meetupsCollection.find({}, { _id: 1}).toArray();\n\n        client.close();\n\n    return {\n        fallback: false,\n        paths: meetups.map(meetup => ({ \n            params: { meetupId: meetup._id.toString() },\n         })),\n };\n}\n\nexport async function getStaticProps(context) {\n    // fetch data for a single meetup\n\n    const meetupId = context.params.meetupId;\n\n    const client = await MongoClient.connect(\n        'mongodb+srv://NextJS:12345@cluster0.2myrw.mongodb.net/meetups?retryWrites=true&w=majority'\n        );\n        const db = client.db();\n      \n        const meetupsCollection = db.collection('meetups');\n\n        const selectedMeetup =  await meetupsCollection.findOne({ \n            _id: ObjectId(meetupId),\n        });\n\n        client.close();\n\n    return {\n        props: {\n            meetupData: {\n                id: selectedMeetup._id.toString(),\n                title: selectedMeetup.title,\n                address: selectedMeetup.title,\n                image: selectedMeetup.image,\n                description: selectedMeetup.description,\n        },\n    },\n };\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}